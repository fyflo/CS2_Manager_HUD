// ... existing code ...

// Получение списка матчей
app.get('/api/matches', (req, res) => {
    db.all(`
        SELECT 
            m.*,
            t1.name as team1_name,
            t2.name as team2_name
        FROM matches m
        LEFT JOIN teams t1 ON m.team1_id = t1.id
        LEFT JOIN teams t2 ON m.team2_id = t2.id
        WHERE m.status = 'active'
        ORDER BY m.created_at DESC
        LIMIT 1
    `, [], (err, matches) => {
        if (err) {
            console.error('Ошибка при получении списка матчей:', err);
            return res.status(500).json({ error: err.message });
        }

        // Отправляем только активный матч
        const activeMatch = matches[0] || null;
        if (activeMatch) {
            // Форматируем данные для отправки
            const matchData = {
                team1_name: activeMatch.team1_name,
                team2_name: activeMatch.team2_name,
                format: activeMatch.format,
                status: activeMatch.status,
                id: activeMatch.id
            };
            res.json([matchData]);
        } else {
            res.json([]);
        }
    });
});

// Обновление данных матча
app.post('/api/matches/:id/update', (req, res) => {
    const matchId = req.params.id;
    const { format, maps } = req.body;

    // Получаем текущий активный матч
    db.get(`
        SELECT 
            m.*,
            t1.name as team1_name,
            t2.name as team2_name
        FROM matches m
        LEFT JOIN teams t1 ON m.team1_id = t1.id
        LEFT JOIN teams t2 ON m.team2_id = t2.id
        WHERE m.id = ? AND m.status = 'active'
    `, [matchId], (err, match) => {
        if (err) {
            console.error('Ошибка при получении матча:', err);
            return res.status(500).json({ error: 'Ошибка при получении матча' });
        }

        if (!match) {
            return res.status(404).json({ error: 'Активный матч не найден' });
        }

        // Используем имена команд из существующего матча
        const team1_name = match.team1_name;
        const team2_name = match.team2_name;

        // Обновляем матч
        db.run(`
            UPDATE matches 
            SET format = ?,
                updated_at = CURRENT_TIMESTAMP
            WHERE id = ?
        `, [format, matchId], (err) => {
            if (err) {
                console.error('Ошибка при обновлении матча:', err);
                return res.status(500).json({ error: 'Ошибка при обновлении матча' });
            }

            res.json({
                success: true,
                message: 'Матч успешно обновлен',
                match: {
                    id: matchId,
                    team1_name,
                    team2_name,
                    format,
                    status: match.status
                }
            });
        });
    });
});

// ... existing code ...